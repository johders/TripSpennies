@page "/signin"
@layout AuthorizationLayout

@inject AuthorizationService authService

<EditForm Model="_model" OnValidSubmit="SigninAsync">
	<DataAnnotationsValidator/>

	<div class="card border-0 shadow-sm">
		<div class="card-body text-center">
			<h4>Welcome back</h4>
			<p class="text-muted">Sign in to your account</p>
			<div class="vstack text-start">
			<div class="mb-3">
				<label class="form-label">Username</label>
				<InputText @bind-Value="_model.Username" placeholder="username" class="form-control rounded-pill fs-6"/>
				<ValidationMessage For="() => _model.Username"/>
			</div>

			<div class="mb-3">
				<label class="form-label">Password</label>
				<InputText @bind-Value="_model.Password" type="password" placeholder="Password" class="form-control rounded-pill fs-6"/>
				<ValidationMessage For="() => _model.Password"/>
			</div>
			<button type="submit" class="btn btn-primary rounded-pill">Sign In</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	private SigninModel _model = new();

	private async Task SigninAsync()
	{
		try
		{
			var result = await authService.SignInAsync(_model);
			if (result.isSuccess)
			{
				//Go to home page
			}
			else
			{
				//Show Error
			}
		}
		catch (Exception ex)
		{
			
		}
	}
}



